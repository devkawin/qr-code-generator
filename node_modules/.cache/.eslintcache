[{"C:\\Users\\Admin\\Desktop\\ReactJS\\Projects\\qr-code-generator\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\ReactJS\\Projects\\qr-code-generator\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\ReactJS\\Projects\\qr-code-generator\\src\\components\\Header.js":"3","C:\\Users\\Admin\\Desktop\\ReactJS\\Projects\\qr-code-generator\\src\\components\\Form.js":"4","C:\\Users\\Admin\\Desktop\\ReactJS\\Projects\\qr-code-generator\\src\\components\\Footer.js":"5"},{"size":210,"mtime":1687053084376,"results":"6","hashOfConfig":"7"},{"size":352,"mtime":1688234705245,"results":"8","hashOfConfig":"7"},{"size":183,"mtime":1688230993631,"results":"9","hashOfConfig":"7"},{"size":1987,"mtime":1688234308687,"results":"10","hashOfConfig":"7"},{"size":169,"mtime":1688231093455,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wke1js",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\ReactJS\\Projects\\qr-code-generator\\src\\index.js",[],[],"C:\\Users\\Admin\\Desktop\\ReactJS\\Projects\\qr-code-generator\\src\\App.js",[],[],"C:\\Users\\Admin\\Desktop\\ReactJS\\Projects\\qr-code-generator\\src\\components\\Header.js",[],[],"C:\\Users\\Admin\\Desktop\\ReactJS\\Projects\\qr-code-generator\\src\\components\\Form.js",["28","29"],[],"import React, { useState } from 'react';\r\nimport logo from '../images/logo.svg'\r\n\r\nexport default function Form() {\r\n  const [getQR, setgetQR] = useState({\r\n    data: '',\r\n    color: '',\r\n    bgcolor: '',\r\n    format: '',\r\n\r\n  })\r\n\r\n  const getValues = (e) => {\r\n    const {name, value} = e.target;\r\n    setgetQR((prev)=>{\r\n      return {...prev, [name]: value}\r\n    })\r\n  }\r\n\r\n  const formSubmit = () => {\r\n    const {data, size, color, bgcolor, format} = getQR\r\n    const qrAPI = `https://api.qrserver.com/v1/create-qr-code/?data=${data}&color=${color.slice(1,color.length)}&bgcolor=${bgcolor.slice(1,bgcolor.length)}&margin=1&qzone=1&format=${format}`\r\n    document.getElementById('qrcode').src = qrAPI;\r\n  }\r\n\r\n  return ( \r\n    <div className='form'>\r\n      <ul className=\"flex-outer\">\r\n        <li>\r\n          <label htmlFor=\"name\">Input some text or URL:</label>      \r\n          <input id='name' type='text' className='data' name='data' placeholder='https://google.com/' onChange={getValues} />\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"color\">Color:</label>\r\n          <input id='color' type='color' className='color' name='color' onChange={getValues} />\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"bgcolor\">BG Color:</label>\r\n          <input id='bgcolor' type='color' className='bgcolor' name='bgcolor' onChange={getValues} />\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"format\">Format:</label>\r\n          <select id='format' className='format' name='format' onChange={getValues}>\r\n              <option>Select one</option>\r\n              <option value='png'>PNG</option>\r\n              <option value='jpg'>JPG</option>\r\n              <option value='gif'>GIF</option>\r\n            </select>\r\n        </li>\r\n        <li>\r\n          <button className='btn' onClick={formSubmit}>Generate QR Code</button>\r\n        </li>\r\n        <li>\r\n          <img id='qrcode' src={logo} className='qrcode'/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Admin\\Desktop\\ReactJS\\Projects\\qr-code-generator\\src\\components\\Footer.js",[],[],{"ruleId":"30","severity":1,"message":"31","line":21,"column":18,"nodeType":"32","messageId":"33","endLine":21,"endColumn":22},{"ruleId":"34","severity":1,"message":"35","line":54,"column":11,"nodeType":"36","endLine":54,"endColumn":59},"no-unused-vars","'size' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]